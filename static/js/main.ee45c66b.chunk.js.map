{"version":3,"sources":["Components/Header/Header.jsx","Components/HomePage/HomePage.jsx","Helpers/actions.js","Helpers/GetCharacters.js","Components/HomePage/CharactersList/CharacterCard/CharacterCard.jsx","Components/HomePage/CharactersList/Characters.jsx","Helpers/GetLocations.js","Components/HomePage/LocationsList/LocationCard/LocationCard.jsx","Components/HomePage/LocationsList/Locations.jsx","Components/HomePage/EpisodesList/Episodes.jsx","Components/Footer/Footer.jsx","Helpers/GetCharacter.js","Components/HomePage/CharacterPage/CharacterPage.jsx","Helpers/GetLocation.js","Components/HomePage/LocationPage/LocationPage.jsx","App.js","Redux/charactersReducer.js","Redux/characterReducer.js","Redux/locationsReducer.js","Redux/locationReducer.js","Redux/allReducer.js","index.js"],"names":["Header","className","to","exact","HomePage","START_LOAD_CHARACTERS","LOADED_CHARACTERS","ERROR_CHARACTERS","START_LOAD_CHARACTER","LOADED_CHARACTER","ERROR_CHARACTER","START_LOAD_LOCATIONS","LOADED_LOCATIONS","ERROR_LOCATIONS","START_LOAD_LOCATION","LOADED_LOCATION","ERROR_LOCATION","getStartedLoadData","type","getLoadedDataSuccess","data","payload","getDataFailure","error","CharacterCard","character","src","image","alt","id","name","gender","species","status","connect","state","loading","characters","loaded","charactersList","dispatch","getCharacters","fetch","then","response","ok","json","Error","res","catch","err","message","useEffect","map","LocationCard","location","dimension","locations","locationsList","getLocations","console","log","Episodes","Footer","href","characterParams","getCharacter","match","params","characterId","origin","url","split","reverse","episode","ep","index","locationParams","getLocation","locationId","residents","unit","App","path","component","Characters","Locations","CharacterPage","LocationPage","initialState","combineReducers","action","results","store","createStore","combineReducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ee45c66b.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './Header.scss';\r\n\r\nconst Header = () => {\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <ul className=\"header__list\">\r\n                <li className=\"header__item\">\r\n                    <NavLink\r\n                        to=\"/\"\r\n                        exact\r\n                        className=\"header__link\"\r\n                    >\r\n                        Home Page\r\n                    </NavLink>\r\n                </li>\r\n\r\n                <li className=\"header__item\">\r\n                    <NavLink\r\n                        to=\"/characters\"\r\n                        exact\r\n                        className=\"header__link\"\r\n                    >\r\n                        All Characters\r\n                    </NavLink>\r\n                </li>\r\n\r\n                <li className=\"header__item\">\r\n                    <NavLink\r\n                        to=\"/locations\"\r\n                        exact\r\n                        className=\"header__link\"\r\n                    >\r\n                        All Locations\r\n                    </NavLink>\r\n                </li>\r\n\r\n                <li className=\"header__item\">\r\n                    <NavLink\r\n                        to=\"/episodes\"\r\n                        exact\r\n                        className=\"header__link\"\r\n                    >\r\n                        All Episodes\r\n                    </NavLink>\r\n                </li>\r\n            </ul>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\n\r\nconst HomePage = () => {\r\n\r\n    return (\r\n        <div>\r\n            Welcome to Home Page\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomePage;","export const START_LOAD_CHARACTERS = \"START_LOAD_CHARACTERS\";\r\nexport const LOADED_CHARACTERS = \"LOADED_CHARACTERS\";\r\nexport const ERROR_CHARACTERS = \"ERROR_CHARACTERS\";\r\n\r\nexport const START_LOAD_CHARACTER = \"START_LOAD_CHARACTER\";\r\nexport const LOADED_CHARACTER = \"LOADED_CHARACTER\";\r\nexport const ERROR_CHARACTER = \"ERROR_CHARACTER\";\r\n\r\nexport const START_LOAD_LOCATIONS = \"START_LOAD_LOCATIONS\";\r\nexport const LOADED_LOCATIONS = \"LOADED_LOCATIONS\";\r\nexport const ERROR_LOCATIONS = \"ERROR_LOCATIONS\";\r\n\r\nexport const START_LOAD_LOCATION = \"START_LOAD_LOCATION\";\r\nexport const LOADED_LOCATION = \"LOADED_LOCATION\";\r\nexport const ERROR_LOCATION = \"ERROR_LOCATION\";","import { START_LOAD_CHARACTERS, LOADED_CHARACTERS, ERROR_CHARACTERS } from './actions';\r\n\r\nexport const getCharacters = () => {\r\n    return dispatch => {\r\n        dispatch(getStartedLoadData());\r\n\r\n        fetch(`https://rickandmortyapi.com/api/character`)\r\n            .then( response => {\r\n                if(response.ok) {\r\n                    return response.json();\r\n                }\r\n                throw new Error('error');\r\n            })\r\n            .then(res => {\r\n                dispatch(getLoadedDataSuccess(res));\r\n            })\r\n            .catch(err => {\r\n                dispatch(getDataFailure(err.message));\r\n            })\r\n    };\r\n};\r\n\r\nconst getStartedLoadData = () => ({\r\n   type: START_LOAD_CHARACTERS\r\n});\r\n\r\nconst getLoadedDataSuccess = (data) => ({\r\n   type: LOADED_CHARACTERS,\r\n    payload: {\r\n       ...data\r\n    }\r\n});\r\n\r\nconst getDataFailure = (error) => ({\r\n   type: ERROR_CHARACTERS,\r\n    payload: {\r\n       error\r\n    }\r\n});","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './CharacterCard.scss';\r\n\r\nconst CharacterCard = ({character}) => {\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={character.image} className=\"card__img\" alt=\"photo\" />\r\n\r\n            <div className=\"card__wrapper\">\r\n                Name: &nbsp;\r\n                <Link to={`character/${character.id}`} className=\"card__link\">\r\n                    {character.name}\r\n                </Link>\r\n\r\n                <div className=\"card__item\">\r\n                    Gender: &nbsp; {character.gender}\r\n                </div>\r\n\r\n                <div className=\"card__item\">\r\n                    Species: &nbsp; {character.species}\r\n                </div>\r\n\r\n                <div className=\"card__item\">\r\n                    Status: &nbsp; {character.status}\r\n                </div>\r\n\r\n                <div className=\"card__item\">\r\n                    Type: &nbsp; {character.type}\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CharacterCard;","import React, {useEffect} from 'react';\r\nimport {getCharacters} from '../../../Helpers/GetCharacters';\r\nimport {connect} from 'react-redux';\r\nimport CharacterCard from './CharacterCard/CharacterCard';\r\nimport './Characters.scss';\r\n\r\nconst Characters = ({getCharacters, loading, loaded, charactersList, error}) => {\r\n\r\n    useEffect(() => {\r\n        if(!loaded && !loading) {\r\n            getCharacters();\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"characters\">\r\n            <ul className=\"characters__list\">\r\n                {charactersList.map(character => (\r\n                    <li key={character.id} className=\"characters__item\">\r\n                        <CharacterCard character={character} />\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.characters.loading,\r\n        loaded: state.characters.loaded,\r\n        charactersList: state.characters.charactersList,\r\n        error: state.characters.error\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getCharacters: () => {\r\n            dispatch(getCharacters());\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Characters);\r\n","import { START_LOAD_LOCATIONS, LOADED_LOCATIONS, ERROR_LOCATIONS} from './actions';\r\n\r\nexport const getLocations = () => {\r\n    return dispatch => {\r\n        dispatch(getStartedLoadData());\r\n\r\n        fetch(`https://rickandmortyapi.com/api/location`)\r\n            .then( response => {\r\n                if(response.ok) {\r\n                    return response.json();\r\n                }\r\n                throw new Error('error');\r\n            })\r\n            .then(res => {\r\n                dispatch(getLoadedDataSuccess(res));\r\n            })\r\n            .catch(err => {\r\n                dispatch(getDataFailure(err.message));\r\n            })\r\n    };\r\n};\r\n\r\nconst getStartedLoadData = () => ({\r\n    type: START_LOAD_LOCATIONS\r\n});\r\n\r\nconst getLoadedDataSuccess = (data) => ({\r\n    type: LOADED_LOCATIONS,\r\n    payload: {\r\n        ...data\r\n    }\r\n});\r\n\r\nconst getDataFailure = (error) => ({\r\n    type: ERROR_LOCATIONS,\r\n    payload: {\r\n        error\r\n    }\r\n});","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './LocationCard.scss';\r\n\r\nconst LocationCard = ({location}) => {\r\n\r\n    return (\r\n        <div className=\"card\">\r\n\r\n            <div className=\"card__wrapper\">\r\n                Name: &nbsp;\r\n                <Link to={`location/${location.id}`} className=\"card__link\">\r\n                    {location.name}\r\n                </Link>\r\n\r\n                <div className=\"card__item\">\r\n                    Type: &nbsp; {location.type}\r\n                </div>\r\n\r\n                <div className=\"card__item\">\r\n                    Dimension: &nbsp; {location.dimension}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default LocationCard;","import React, {useEffect} from 'react';\r\nimport {getLocations} from '../../../Helpers/GetLocations';\r\nimport {connect} from 'react-redux';\r\nimport LocationCard from './LocationCard/LocationCard';\r\nimport './Locations.scss';\r\n\r\nconst Locations = ({getLocations, loading, loaded, locationsList, error}) => {\r\n\r\n    useEffect(() => {\r\n        if(!loaded && !loading) {\r\n            getLocations();\r\n        }\r\n    }, []);\r\n    console.log(locationsList, \"locationsList\");\r\n\r\n    return (\r\n        <div className=\"locations\">\r\n            <ul className=\"locations__list\">\r\n                {locationsList.map(location => (\r\n                    <li key={location.id} className=\"locations__item\">\r\n                        <LocationCard location={location} />\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.locations.loading,\r\n        loaded: state.locations.loaded,\r\n        locationsList: state.locations.locationsList,\r\n        error: state.locations.error\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getLocations: () => {\r\n            dispatch(getLocations());\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Locations);\r\n","import React from 'react';\r\n\r\nconst Episodes = () => {\r\n\r\n    return (\r\n        <div>\r\n            Welcome to list of all episodes\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Episodes;","import React from 'react';\r\nimport './Footer.scss'\r\n\r\nconst Footer = () => {\r\n\r\n    return (\r\n        <footer className=\"footer\">\r\n            <a\r\n                href=\"https://github.com/FaychakA/New-app\"\r\n                className=\"footer__link\"\r\n            >\r\n                github\r\n            </a>\r\n\r\n            <div className=\"footer__text\">\r\n                ©2021\r\n            </div>\r\n        </footer>\r\n    )\r\n};\r\n\r\nexport default Footer;","import { START_LOAD_CHARACTER, LOADED_CHARACTER, ERROR_CHARACTER } from './actions';\r\n\r\nexport const getCharacter = (id) => {\r\n    return dispatch => {\r\n        dispatch(getStartedLoadData());\r\n\r\n        fetch(`https://rickandmortyapi.com/api/character/${id}`)\r\n            .then( response => {\r\n                if(response.ok) {\r\n                    return response.json();\r\n                }\r\n                throw new Error('error');\r\n            })\r\n            .then(res => {\r\n                dispatch(getLoadedDataSuccess(res));\r\n            })\r\n            .catch(err => {\r\n                dispatch(getDataFailure(err.message));\r\n            })\r\n    };\r\n};\r\n\r\nconst getStartedLoadData = () => ({\r\n    type: START_LOAD_CHARACTER\r\n});\r\n\r\nconst getLoadedDataSuccess = (data) => ({\r\n    type: LOADED_CHARACTER,\r\n    payload: {\r\n        ...data\r\n    }\r\n});\r\n\r\nconst getDataFailure = (error) => ({\r\n    type: ERROR_CHARACTER,\r\n    payload: {\r\n        error\r\n    }\r\n});","import React, {useEffect} from 'react';\r\nimport {getCharacter} from '../../../Helpers/GetCharacter';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport './CharacterPage.scss';\r\n\r\nconst CharacterPage = ({match, getCharacter, loading, characterParams, error}) => {\r\n\r\n    useEffect(() => {\r\n        if (!loading) {\r\n            getCharacter(match.params.characterId);\r\n        }\r\n    }, []);\r\n\r\n    if(loading || !characterParams){\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"character\">\r\n            <div className=\"character__wrapper\">\r\n                <img src={characterParams.image} className=\"character__img\" alt=\"photo\"/>\r\n\r\n                <div className=\"character__params\">\r\n                    <div className=\"character__params--text\">\r\n                        Name: &nbsp; {characterParams.name}\r\n                    </div>\r\n\r\n                    <div className=\"character__params--text\">\r\n                        Gender: &nbsp; {characterParams.gender}\r\n                    </div>\r\n\r\n                    <div className=\"character__params--text\">\r\n                        Species: &nbsp; {characterParams.species}\r\n                    </div>\r\n\r\n                    <div className=\"character__params--text\">\r\n                        Status: &nbsp; {characterParams.status}\r\n                    </div>\r\n\r\n                    <div className=\"character__params--text\">\r\n                        Type: &nbsp; {characterParams.type}\r\n                    </div>\r\n\r\n                    <div className=\"character__params--text\">\r\n                        Origin: &nbsp;\r\n                        <Link\r\n                            to={`/location/${characterParams.origin.url.split('/').reverse()[0]}`}\r\n                            className=\"character__link\"\r\n                        >\r\n                            {characterParams.origin.name}\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className=\"character__episode\">\r\n                        <div>\r\n                            Episodes:\r\n                        </div>\r\n\r\n                        <ul className=\"character__episode--list\">\r\n                            &nbsp;\r\n                            {characterParams\r\n                            && characterParams.episode\r\n                            && characterParams.episode.map((ep, index) => (\r\n                                <li key={index} className=\"character__episode--item\">\r\n                                    <Link\r\n                                        to={`/episode/${ep.split('/').reverse()[0]}`}\r\n                                        className=\"character__link\"\r\n                                    >\r\n                                        {ep.split('/').reverse()[0]}\r\n                                    </Link>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div className=\"character__location\">\r\n                        Location: &nbsp;\r\n                        <Link\r\n                            to={`/location/${characterParams.location.url.split('/').reverse()[0]}`}\r\n                            className=\"character__link\"\r\n                        >\r\n                            {characterParams.location.url.split('/').reverse()[0]}\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.character.loading,\r\n        characterParams: state.character.characterParams,\r\n        error: state.character.error\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getCharacter: (id) => {\r\n            dispatch(getCharacter(id));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CharacterPage);","import { START_LOAD_LOCATION, LOADED_LOCATION, ERROR_LOCATION } from './actions';\r\n\r\nexport const getLocation = (id) => {\r\n    return dispatch => {\r\n        dispatch(getStartedLoadData());\r\n\r\n        fetch(`https://rickandmortyapi.com/api/location/${id}`)\r\n            .then( response => {\r\n                if(response.ok) {\r\n                    return response.json();\r\n                }\r\n                throw new Error('error');\r\n            })\r\n            .then(res => {\r\n                dispatch(getLoadedDataSuccess(res));\r\n            })\r\n            .catch(err => {\r\n                dispatch(getDataFailure(err.message));\r\n            })\r\n    };\r\n};\r\n\r\nconst getStartedLoadData = () => ({\r\n    type: START_LOAD_LOCATION\r\n});\r\n\r\nconst getLoadedDataSuccess = (data) => ({\r\n    type: LOADED_LOCATION,\r\n    payload: {\r\n        ...data\r\n    }\r\n});\r\n\r\nconst getDataFailure = (error) => ({\r\n    type: ERROR_LOCATION,\r\n    payload: {\r\n        error\r\n    }\r\n});","import React, {useEffect} from 'react';\r\nimport {getLocation} from '../../../Helpers/GetLocation';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport './LocationPage.scss';\r\n\r\nconst LocationPage = ({match, getLocation, loading, locationParams, error}) => {\r\n\r\n    useEffect(() => {\r\n        if (!loading) {\r\n            getLocation(match.params.locationId);\r\n        }\r\n    }, []);\r\n    console.log(locationParams, \"locationParams\");\r\n\r\n    if(loading || !locationParams){\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"location\">\r\n            <div className=\"location__wrapper\">\r\n                <img src={locationParams.image} className=\"location__img\" alt=\"photo\"/>\r\n\r\n                <div className=\"location__params\">\r\n                    <div className=\"location__params--text\">\r\n                        Name: &nbsp; {locationParams.name}\r\n                    </div>\r\n\r\n                    <div className=\"location__params--text\">\r\n                        Type: &nbsp; {locationParams.type}\r\n                    </div>\r\n\r\n                    <div className=\"location__params--text\">\r\n                        Dimension: &nbsp; {locationParams.dimension}\r\n                    </div>\r\n\r\n                    <div className=\"location__characters\">\r\n                        <div>\r\n                            Residents:\r\n                        </div>\r\n\r\n                        <ul className=\"location__characters--list\">\r\n                            &nbsp;\r\n                            {locationParams\r\n                            && locationParams.residents\r\n                            && locationParams.residents.map((unit, index) => (\r\n                                <li key={index} className=\"location__characters--item\">\r\n                                    <Link\r\n                                        to={`/character/${unit.split('/').reverse()[0]}`}\r\n                                        className=\"location__link\"\r\n                                    >\r\n                                        {unit.split('/').reverse()[0]}\r\n                                    </Link>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.location.loading,\r\n        locationParams: state.location.locationParams,\r\n        error: state.location.error\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getLocation: (id) => {\r\n            dispatch(getLocation(id));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(LocationPage);","import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\nimport Header from './Components/Header/Header';\nimport HomePage from './Components/HomePage/HomePage';\nimport Characters from './Components/HomePage/CharactersList/Characters';\nimport Locations from \"./Components/HomePage/LocationsList/Locations\";\nimport Episodes from \"./Components/HomePage/EpisodesList/Episodes\";\nimport Footer from \"./Components/Footer/Footer\";\nimport CharacterPage from \"./Components/HomePage/CharacterPage/CharacterPage\";\nimport LocationPage from \"./Components/HomePage/LocationPage/LocationPage\";\nimport './App.scss';\n\nfunction App() {\n    return (\n        <div className=\"app\">\n            <div className=\"app__header\">\n                <Header/>\n            </div>\n\n            <main className=\"app__main\">\n                <Switch>\n                    <Route\n                        path=\"/\"\n                        exact\n                        component={HomePage}\n                    />\n\n                    <Route\n                        path=\"/characters\"\n                        exact\n                        component={Characters}\n                    />\n\n                    <Route\n                        path=\"/locations\"\n                        exact\n                        component={Locations}\n                    />\n\n                    <Route\n                        path=\"/episodes\"\n                        exact\n                        component={Episodes}\n                    />\n\n                    <Route\n                    path=\"/character/:characterId\"\n                    exact\n                    component={CharacterPage}\n                    />\n\n                    <Route\n                        path=\"/location/:locationId\"\n                        exact\n                        component={LocationPage}\n                    />\n                </Switch>\n            </main>\n\n            <div className=\"app__footer\">\n                <Footer/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { START_LOAD_CHARACTERS, LOADED_CHARACTERS, ERROR_CHARACTERS } from '../Helpers/actions';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    loaded: false,\r\n    charactersList: [],\r\n    error: null,\r\n}\r\n\r\nexport default function charactersReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case START_LOAD_CHARACTERS:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                loaded: false\r\n            };\r\n        case LOADED_CHARACTERS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                loaded: true,\r\n                charactersList: [...state.charactersList, ...action.payload.results]\r\n            };\r\n        case ERROR_CHARACTERS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { START_LOAD_CHARACTER, LOADED_CHARACTER, ERROR_CHARACTER } from '../Helpers/actions';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    characterParams: null,\r\n    error: null,\r\n}\r\n\r\nexport default function characterReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case START_LOAD_CHARACTER:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        case LOADED_CHARACTER:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                characterParams: {...action.payload}\r\n            };\r\n        case ERROR_CHARACTER:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { START_LOAD_LOCATIONS, LOADED_LOCATIONS, ERROR_LOCATIONS } from '../Helpers/actions';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    loaded: false,\r\n    locationsList: [],\r\n    error: null,\r\n}\r\n\r\nexport default function locationsReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case START_LOAD_LOCATIONS:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                loaded: false\r\n            };\r\n        case LOADED_LOCATIONS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                loaded: true,\r\n                locationsList: [...state.locationsList, ...action.payload.results]\r\n            };\r\n        case ERROR_LOCATIONS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { START_LOAD_LOCATION, LOADED_LOCATION, ERROR_LOCATION } from '../Helpers/actions';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    locationParams: null,\r\n    error: null,\r\n}\r\n\r\nexport default function locationReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case START_LOAD_LOCATION:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        case LOADED_LOCATION:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                locationParams: {...action.payload}\r\n            };\r\n        case ERROR_LOCATION:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport charactersReducer from './charactersReducer';\r\nimport characterReducer from './characterReducer';\r\nimport locationsReducer from './locationsReducer';\r\nimport locationReducer from './locationReducer';\r\n\r\nexport default combineReducers({\r\n   characters: charactersReducer,\r\n   character: characterReducer,\r\n   locations: locationsReducer,\r\n   location: locationReducer,\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport './index.scss';\nimport App from './App';\nimport combineReducer from './Redux/allReducer';\n\nconst store = createStore(combineReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}