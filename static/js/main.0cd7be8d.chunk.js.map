{"version":3,"sources":["components/common/header/Header.jsx","components/common/footer/Footer.jsx","actions/actions-types/charactersListActions.js","actions/GetCharacters.js","actions/GetNextCharactersPage.js","actions/GetCharactersBySearchParams.js","components/charactersList/components/characterCard/CharacterCard.jsx","components/charactersList/components/charactersSerchBar/CharactersSerchBar.jsx","components/charactersList/Characters.jsx","actions/actions-types/locationsListActions.js","actions/GetLocations.js","actions/GetNextLocationsPage.js","actions/GetLocationsBySearchParams.js","components/locationsList/components/locationCard/LocationCard.jsx","components/locationsList/components/locatiosSearchBar/LocationsSearchBar.jsx","components/locationsList/Locations.jsx","actions/actions-types/episodesListActions.js","actions/GetEpisodes.js","actions/GetNextEpisodesPage.js","actions/GetEpisodesBySearchParams.js","components/episodesList/components/episodeCard/EpisodeCard.jsx","components/episodesList/components/episodesSearchBar/EpisodesSearchBar.jsx","components/episodesList/Episodes.jsx","actions/actions-types/characterActions.js","actions/GetCharacter.js","components/characterPage/CharacterPage.jsx","actions/actions-types/locationActions.js","actions/GetLocation.js","components/locationPage/LocationPage.jsx","actions/actions-types/episodeActions.js","actions/GetEpisode.js","components/episodePage/EpisodePage.jsx","App.js","reducers/charactersReducer.js","reducers/characterReducer.js","reducers/locationsReducer.js","reducers/locationReducer.js","reducers/episodesReducer.js","reducers/episodeReducer.js","reducers/allReducer.js","index.js"],"names":["Header","className","to","exact","activeClassName","Footer","href","START_LOAD_CHARACTERS","LOADED_CHARACTERS","ERROR_CHARACTERS","START_LOAD_CHARACTERS_NEXT_PAGE","LOADED_CHARACTERS_NEXT_PAGE","ERROR_CHARACTERS_NEXT_PAGE","START_LOAD_CHARACTERS_BY_SEARCH_PARAMS","LOADED_CHARACTERS_BY_SEARCH_PARAMS","ERROR_CHARACTERS_BY_SEARCH_PARAMS","getStartedLoadData","type","getLoadedDataSuccess","data","payload","getDataFailure","error","CharacterCard","character","src","image","alt","id","name","gender","species","status","CharactersSearchBar","getCharacterBySearchParams","useState","formData","setFormData","onHandleBlur","key","value","onBlur","event","target","placeholder","maxLength","onClick","searchParams","el","slice","onHandleSubmite","connect","state","loading","characters","loaded","info","searched","serched","charactersList","dispatch","getCharacters","fetch","then","response","ok","json","Error","res","catch","err","message","getNextCharactersPage","link","params","useEffect","dataLength","length","next","hasMore","map","index","START_LOAD_LOCATIONS","LOADED_LOCATIONS","ERROR_LOCATIONS","START_LOAD_LOCATIONS_NEXT_PAGE","LOADED_LOCATIONS_NEXT_PAGE","ERROR_LOCATIONS_NEXT_PAGE","START_LOAD_LOCATIONS_BY_SEARCH_PARAMS","LOADED_LOCATIONS_BY_SEARCH_PARAMS","ERROR_LOCATIONS_BY_SEARCH_PARAMS","LocationCard","location","dimension","LocationsSearchBar","getLocationsBySearchParams","locations","earched","locationsList","getLocations","getNextLocationsPage","START_LOAD_EPISODES","LOADED_EPISODES","ERROR_EPISODES","START_LOAD_EPISODES_NEXT_PAGE","LOADED_EPISODES_NEXT_PAGE","ERROR_EPISODES_NEXT_PAGE","START_LOAD_EPISODES_BY_SEARCH_PARAMS","LOADED_EPISODES_BY_SEARCH_PARAMS","ERROR_EPISODES_BY_SEARCH_PARAMS","EpisodeCard","ep","episode","EpisodesSearchBar","getEpisodesBySearchParams","episodes","episodesList","getEpisodes","getNextEpisodesPage","START_LOAD_CHARACTER","LOADED_CHARACTER","ERROR_CHARACTER","characterParams","getCharacter","match","characterId","origin","url","split","reverse","START_LOAD_LOCATION","LOADED_LOCATION","ERROR_LOCATION","locationParams","getLocation","locationId","residents","unit","START_LOAD_EPISODE","LOADED_EPISODE","ERROR_EPISODE","episodeParams","getEpisode","episodeId","App","path","component","Characters","Locations","Episodes","CharacterPage","LocationPage","EpisodePage","initialState","combineReducers","action","results","store","createStore","combineReducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0cd7be8d.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './Header.scss';\r\n\r\nconst Header = () => {\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <ul className=\"header__list\">\r\n                <li className=\"header__item\">\r\n                    <NavLink\r\n                        to=\"/character\"\r\n                        exact\r\n                        className=\"header__link\"\r\n                        activeClassName=\"header__link--active\"\r\n                    >\r\n                        All Characters\r\n                    </NavLink>\r\n                </li>\r\n\r\n                <li className=\"header__item\">\r\n                    <NavLink\r\n                        to=\"/location\"\r\n                        exact\r\n                        className=\"header__link\"\r\n                        activeClassName=\"header__link--active\"\r\n                    >\r\n                        All Locations\r\n                    </NavLink>\r\n                </li>\r\n\r\n                <li className=\"header__item\">\r\n                    <NavLink\r\n                        to=\"/episode\"\r\n                        exact\r\n                        className=\"header__link\"\r\n                        activeClassName=\"header__link--active\"\r\n                    >\r\n                        All Episodes\r\n                    </NavLink>\r\n                </li>\r\n            </ul>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport './Footer.scss'\r\n\r\nconst Footer = () => {\r\n\r\n    return (\r\n        <footer className=\"footer\">\r\n            <a\r\n                href=\"https://github.com/FaychakA/New-app\"\r\n                className=\"footer__link\"\r\n            >\r\n                github\r\n            </a>\r\n\r\n            <div className=\"footer__text\">\r\n                ©2021\r\n            </div>\r\n        </footer>\r\n    )\r\n};\r\n\r\nexport default Footer;","export const START_LOAD_CHARACTERS = \"START_LOAD_CHARACTERS\";\r\nexport const LOADED_CHARACTERS = \"LOADED_CHARACTERS\";\r\nexport const ERROR_CHARACTERS = \"ERROR_CHARACTERS\";\r\n\r\nexport const START_LOAD_CHARACTERS_NEXT_PAGE = \"START_LOAD_CHARACTERS_NEXT_PAGE\";\r\nexport const LOADED_CHARACTERS_NEXT_PAGE = \"LOADED_CHARACTERS_NEXT_PAGE\";\r\nexport const ERROR_CHARACTERS_NEXT_PAGE = \"ERROR_CHARACTERS_NEXT_PAGE\";\r\n\r\nexport const START_LOAD_CHARACTERS_BY_SEARCH_PARAMS = \"START_LOAD_CHARACTERS_BY_SEARCH_PARAMS\";\r\nexport const LOADED_CHARACTERS_BY_SEARCH_PARAMS = \"LOADED_CHARACTERS_BY_SEARCH_PARAMS\";\r\nexport const ERROR_CHARACTERS_BY_SEARCH_PARAMS = \"ERROR_CHARACTERS_BY_SEARCH_PARAMS\";","import {START_LOAD_CHARACTERS, LOADED_CHARACTERS, ERROR_CHARACTERS} from './actions-types/charactersListActions';\r\n\r\nexport const getCharacters = () => {\r\n    return dispatch => {\r\n        dispatch(getStartedLoadData());\r\n\r\n        fetch(`https://rickandmortyapi.com/api/character`)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                }\r\n                throw new Error('error');\r\n            })\r\n            .then(res => {\r\n                dispatch(getLoadedDataSuccess(res));\r\n            })\r\n            .catch(err => {\r\n                dispatch(getDataFailure(err.message));\r\n            })\r\n    };\r\n};\r\n\r\nconst getStartedLoadData = () => ({\r\n    type: START_LOAD_CHARACTERS\r\n});\r\n\r\nconst getLoadedDataSuccess = (data) => ({\r\n    type: LOADED_CHARACTERS,\r\n    payload: {\r\n        ...data\r\n    }\r\n});\r\n\r\nconst getDataFailure = (error) => ({\r\n    type: ERROR_CHARACTERS,\r\n    payload: {\r\n        error\r\n    }\r\n});","import { START_LOAD_CHARACTERS_NEXT_PAGE, LOADED_CHARACTERS_NEXT_PAGE, ERROR_CHARACTERS_NEXT_PAGE } from './actions-types/charactersListActions';\r\n\r\nexport const getNextCharactersPage = (link) => {\r\n    return dispatch => {\r\n        dispatch(getStartedLoadData());\r\n\r\n        fetch(link)\r\n            .then( response => {\r\n                if(response.ok) {\r\n                    return response.json();\r\n                }\r\n                throw new Error('error');\r\n            })\r\n            .then(res => {\r\n                dispatch(getLoadedDataSuccess(res));\r\n            })\r\n            .catch(err => {\r\n                dispatch(getDataFailure(err.message));\r\n            })\r\n    };\r\n};\r\n\r\nconst getStartedLoadData = () => ({\r\n    type: START_LOAD_CHARACTERS_NEXT_PAGE\r\n});\r\n\r\nconst getLoadedDataSuccess = (data) => ({\r\n    type: LOADED_CHARACTERS_NEXT_PAGE,\r\n    payload: {\r\n        ...data\r\n    }\r\n});\r\n\r\nconst getDataFailure = (error) => ({\r\n    type: ERROR_CHARACTERS_NEXT_PAGE,\r\n    payload: {\r\n        error\r\n    }\r\n});","import {\r\n    START_LOAD_CHARACTERS_BY_SEARCH_PARAMS,\r\n    LOADED_CHARACTERS_BY_SEARCH_PARAMS,\r\n    ERROR_CHARACTERS_BY_SEARCH_PARAMS\r\n} from './actions-types/charactersListActions';\r\n\r\nexport const getCharacterBySearchParams = (params) => {\r\n    return dispatch => {\r\n        dispatch(getStartedLoadData());\r\n\r\n        fetch(`https://rickandmortyapi.com/api/character/?${params}`)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                }\r\n                throw new Error('error');\r\n            })\r\n            .then(res => {\r\n                dispatch(getLoadedDataSuccess(res));\r\n            })\r\n            .catch(err => {\r\n                dispatch(getDataFailure(err.message));\r\n            })\r\n    };\r\n};\r\n\r\nconst getStartedLoadData = () => ({\r\n    type: START_LOAD_CHARACTERS_BY_SEARCH_PARAMS\r\n});\r\n\r\nconst getLoadedDataSuccess = (data) => ({\r\n    type: LOADED_CHARACTERS_BY_SEARCH_PARAMS,\r\n    payload: {\r\n        ...data\r\n    }\r\n});\r\n\r\nconst getDataFailure = (error) => ({\r\n    type: ERROR_CHARACTERS_BY_SEARCH_PARAMS,\r\n    payload: {\r\n        error\r\n    }\r\n});","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './CharacterCard.scss';\r\n\r\nconst CharacterCard = ({character}) => {\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={character.image} className=\"card__img\" alt=\"photo\"/>\r\n\r\n            <div className=\"card__wrapper\">\r\n                Name: &nbsp;\r\n                <Link to={`/character/${character.id}`} className=\"card__link\">\r\n                    {character.name}\r\n                </Link>\r\n\r\n                <div className=\"card__item\">\r\n                    Gender: &nbsp; {character.gender}\r\n                </div>\r\n\r\n                <div className=\"card__item\">\r\n                    Species: &nbsp; {character.species}\r\n                </div>\r\n\r\n                <div className=\"card__item\">\r\n                    Status: &nbsp; {character.status}\r\n                </div>\r\n\r\n                <div className=\"card__item\">\r\n                    Type: &nbsp; {character.type}\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CharacterCard;","import React, {useState} from 'react';\r\n\r\nconst CharactersSearchBar = ({getCharacterBySearchParams}) => {\r\n    const [formData, setFormData] = useState({});\r\n\r\n    const onHandleBlur = (key, value) => {\r\n        if (value == \"Select gender\" || value == \"Select status\") {\r\n            delete formData[key];\r\n\r\n            setFormData({...formData});\r\n\r\n            return;\r\n        }\r\n\r\n        if (!!value) {\r\n            setFormData({...formData, [key]: value});\r\n        }\r\n    };\r\n\r\n    const onHandleSubmite = () => {\r\n        let searchParams = \"\";\r\n\r\n        for (let el in formData) {\r\n            searchParams = searchParams + el + '=' + formData[el] + '&';\r\n        }\r\n\r\n        searchParams = searchParams.slice(0, -1);\r\n\r\n        getCharacterBySearchParams(searchParams);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"characters__form\">\r\n                <label className=\"characters__label\">\r\n                    <div className=\"characters__text\">\r\n                        Search by name:\r\n                    </div>\r\n\r\n                    <input\r\n                        type=\"text\"\r\n                        onBlur={(event) => (onHandleBlur('name', event.target.value))}\r\n                        placeholder=\"Please enter a name\"\r\n                        className=\"characters__input\"\r\n                        maxLength=\"30\"\r\n                    />\r\n                </label>\r\n\r\n                <label className=\"characters__label\">\r\n                    <div className=\"characters__text\">\r\n                        Search by species:\r\n                    </div>\r\n\r\n                    <input\r\n                        type=\"text\"\r\n                        onBlur={(event) => (onHandleBlur('species', event.target.value))}\r\n                        placeholder=\"Please enter a species\"\r\n                        className=\"characters__input\"\r\n                        maxLength=\"30\"\r\n                    />\r\n                </label>\r\n\r\n                <label className=\"characters__label\">\r\n                    <div className=\"characters__text\">\r\n                        Search by type:\r\n                    </div>\r\n\r\n                    <input\r\n                        type=\"text\"\r\n                        onBlur={(event) => (onHandleBlur('type', event.target.value))}\r\n                        placeholder=\"Please enter a type\"\r\n                        className=\"characters__input\"\r\n                        maxLength=\"30\"\r\n                    />\r\n                </label>\r\n\r\n                <select\r\n                    onBlur={(event) => (onHandleBlur('status', event.target.value))}\r\n                    name=\"status select\"\r\n                    className=\"characters__select\"\r\n                >\r\n                    <option>Select status</option>\r\n                    <option>alive</option>\r\n                    <option>dead</option>\r\n                    <option>unknown</option>\r\n                </select>\r\n\r\n                <select\r\n                    onBlur={(event) => (onHandleBlur('gender', event.target.value))}\r\n                    name=\"gender select\"\r\n                    className=\"characters__select\"\r\n                >\r\n                    <option>Select gender</option>\r\n                    <option>female</option>\r\n                    <option>male</option>\r\n                    <option>genderless</option>\r\n                    <option>unknown</option>\r\n                </select>\r\n\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={() => onHandleSubmite()}\r\n                    className=\"characters__button\"\r\n                >\r\n                    Search\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CharactersSearchBar;","import React, {useEffect} from 'react';\r\nimport {getCharacters} from '../../actions/GetCharacters';\r\nimport {getNextCharactersPage} from '../../actions/GetNextCharactersPage';\r\nimport {getCharacterBySearchParams} from '../../actions/GetCharactersBySearchParams';\r\nimport {connect} from 'react-redux';\r\nimport CharacterCard from './components/characterCard/CharacterCard';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport CharactersSearchBar from './components/charactersSerchBar/CharactersSerchBar';\r\nimport './Characters.scss';\r\n\r\nconst Characters = ({\r\n                        getCharacters,\r\n                        getNextCharactersPage,\r\n                        getCharacterBySearchParams,\r\n                        loading,\r\n                        loaded,\r\n                        searched,\r\n                        charactersList,\r\n                        info,\r\n                        error\r\n                    }) => {\r\n\r\n    useEffect(() => {\r\n        if (!loaded || !searched) {\r\n            getCharacters();\r\n        }\r\n    }, []);\r\n\r\n    const handleNextUpdate = () => {\r\n        getNextCharactersPage(info.next);\r\n    };\r\n\r\n    if (!charactersList) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"characters\">\r\n            <CharactersSearchBar getCharacterBySearchParams={getCharacterBySearchParams}/>\r\n\r\n            <ul className=\"characters__list\">\r\n                <InfiniteScroll\r\n                    dataLength={charactersList.length}\r\n                    next={handleNextUpdate}\r\n                    hasMore={!!info.next}\r\n                    className=\"characters__scroll\"\r\n                >\r\n                    {charactersList.map((character, index) => (\r\n                        <li key={index} className=\"characters__item\">\r\n                            <CharacterCard character={character}/>\r\n                        </li>\r\n                    ))}\r\n                </InfiniteScroll>\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.characters.loading,\r\n        loaded: state.characters.loaded,\r\n        info: state.characters.info,\r\n        searched: state.characters.serched,\r\n        charactersList: state.characters.charactersList,\r\n        error: state.characters.error\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getCharacters: () => {\r\n            dispatch(getCharacters());\r\n        },\r\n        getNextCharactersPage: (link) => {\r\n            dispatch(getNextCharactersPage(link));\r\n        },\r\n        getCharacterBySearchParams: (params) => {\r\n            dispatch(getCharacterBySearchParams(params));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Characters);\r\n","export const START_LOAD_LOCATIONS = \"START_LOAD_LOCATIONS\";\r\nexport const LOADED_LOCATIONS = \"LOADED_LOCATIONS\";\r\nexport const ERROR_LOCATIONS = \"ERROR_LOCATIONS\";\r\n\r\nexport const START_LOAD_LOCATIONS_NEXT_PAGE = \"START_LOAD_LOCATIONS_NEXT_PAGE\";\r\nexport const LOADED_LOCATIONS_NEXT_PAGE = \"LOADED_LOCATIONS_NEXT_PAGE\";\r\nexport const ERROR_LOCATIONS_NEXT_PAGE = \"ERROR_LOCATIONS_NEXT_PAGE\";\r\n\r\nexport const START_LOAD_LOCATIONS_BY_SEARCH_PARAMS = \"START_LOAD_LOCATIONS_BY_SEARCH_PARAMS\";\r\nexport const LOADED_LOCATIONS_BY_SEARCH_PARAMS = \"LOADED_LOCATIONS_BY_SEARCH_PARAMS\";\r\nexport const ERROR_LOCATIONS_BY_SEARCH_PARAMS = \"ERROR_LOCATIONS_BY_SEARCH_PARAMS\";","import { START_LOAD_LOCATIONS, LOADED_LOCATIONS, ERROR_LOCATIONS} from './actions-types/locationsListActions';\r\n\r\nexport const getLocations = () => {\r\n    return dispatch => {\r\n        dispatch(getStartedLoadData());\r\n\r\n        fetch(`https://rickandmortyapi.com/api/location`)\r\n            .then( response => {\r\n                if(response.ok) {\r\n                    return response.json();\r\n                }\r\n                throw new Error('error');\r\n            })\r\n            .then(res => {\r\n                dispatch(getLoadedDataSuccess(res));\r\n            })\r\n            .catch(err => {\r\n                dispatch(getDataFailure(err.message));\r\n            })\r\n    };\r\n};\r\n\r\nconst getStartedLoadData = () => ({\r\n    type: START_LOAD_LOCATIONS\r\n});\r\n\r\nconst getLoadedDataSuccess = (data) => ({\r\n    type: LOADED_LOCATIONS,\r\n    payload: {\r\n        ...data\r\n    }\r\n});\r\n\r\nconst getDataFailure = (error) => ({\r\n    type: ERROR_LOCATIONS,\r\n    payload: {\r\n        error\r\n    }\r\n});","import { START_LOAD_LOCATIONS_NEXT_PAGE, LOADED_LOCATIONS_NEXT_PAGE, ERROR_LOCATIONS_NEXT_PAGE } from './actions-types/locationsListActions';\r\n\r\nexport const getNextLocationsPage = (link) => {\r\n    return dispatch => {\r\n        dispatch(getStartedLoadData());\r\n\r\n        fetch(link)\r\n            .then( response => {\r\n                if(response.ok) {\r\n                    return response.json();\r\n                }\r\n                throw new Error('error');\r\n            })\r\n            .then(res => {\r\n                dispatch(getLoadedDataSuccess(res));\r\n            })\r\n            .catch(err => {\r\n                dispatch(getDataFailure(err.message));\r\n            })\r\n    };\r\n};\r\n\r\nconst getStartedLoadData = () => ({\r\n    type: START_LOAD_LOCATIONS_NEXT_PAGE\r\n});\r\n\r\nconst getLoadedDataSuccess = (data) => ({\r\n    type: LOADED_LOCATIONS_NEXT_PAGE,\r\n    payload: {\r\n        ...data\r\n    }\r\n});\r\n\r\nconst getDataFailure = (error) => ({\r\n    type: ERROR_LOCATIONS_NEXT_PAGE,\r\n    payload: {\r\n        error\r\n    }\r\n});","import {\r\n    START_LOAD_LOCATIONS_BY_SEARCH_PARAMS,\r\n    LOADED_LOCATIONS_BY_SEARCH_PARAMS,\r\n    ERROR_LOCATIONS_BY_SEARCH_PARAMS\r\n} from './actions-types/locationsListActions';\r\n\r\nexport const getLocationsBySearchParams = (params) => {\r\n    return dispatch => {\r\n        dispatch(getStartedLoadData());\r\n\r\n        fetch(`https://rickandmortyapi.com/api/location/?${params}`)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                }\r\n                throw new Error('error');\r\n            })\r\n            .then(res => {\r\n                dispatch(getLoadedDataSuccess(res));\r\n            })\r\n            .catch(err => {\r\n                dispatch(getDataFailure(err.message));\r\n            })\r\n    };\r\n};\r\n\r\nconst getStartedLoadData = () => ({\r\n    type: START_LOAD_LOCATIONS_BY_SEARCH_PARAMS\r\n});\r\n\r\nconst getLoadedDataSuccess = (data) => ({\r\n    type: LOADED_LOCATIONS_BY_SEARCH_PARAMS,\r\n    payload: {\r\n        ...data\r\n    }\r\n});\r\n\r\nconst getDataFailure = (error) => ({\r\n    type: ERROR_LOCATIONS_BY_SEARCH_PARAMS,\r\n    payload: {\r\n        error\r\n    }\r\n});","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './LocationCard.scss';\r\n\r\nconst LocationCard = ({location}) => {\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={location.image} className=\"card__img\" alt=\"photo\"/>\r\n\r\n            <div className=\"card__wrapper\">\r\n                Name: &nbsp;\r\n                <Link to={`/location/${location.id}`} className=\"card__link\">\r\n                    {location.name}\r\n                </Link>\r\n\r\n                <div className=\"card__item\">\r\n                    Type: &nbsp; {location.type}\r\n                </div>\r\n\r\n                <div className=\"card__item\">\r\n                    Dimension: &nbsp; {location.dimension}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default LocationCard;","import React, {useState} from 'react';\r\n\r\nconst LocationsSearchBar = ({getLocationsBySearchParams}) => {\r\n    const [formData, setFormData] = useState({});\r\n\r\n    const onHandleBlur = (key, value) => {\r\n        if (!!value) {\r\n            setFormData({...formData, [key]: value});\r\n        }\r\n    };\r\n\r\n    const onHandleSubmite = () => {\r\n        let searchParams = \"\";\r\n\r\n        for (let el in formData) {\r\n            searchParams = searchParams + el + '=' + formData[el] + '&';\r\n        }\r\n\r\n        searchParams = searchParams.slice(0, -1);\r\n\r\n        getLocationsBySearchParams(searchParams);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"characters__form\">\r\n                <label className=\"characters__label\">\r\n                    <div className=\"characters__text\">\r\n                        Search by name:\r\n                    </div>\r\n\r\n                    <input\r\n                        type=\"text\"\r\n                        onBlur={(event) => (onHandleBlur('name', event.target.value))}\r\n                        placeholder=\"Please enter a name\"\r\n                        className=\"characters__input\"\r\n                        maxLength=\"30\"\r\n                    />\r\n                </label>\r\n\r\n                <label className=\"characters__label\">\r\n                    <div className=\"characters__text\">\r\n                        Search by species:\r\n                    </div>\r\n\r\n                    <input\r\n                        type=\"text\"\r\n                        onBlur={(event) => (onHandleBlur('dimension', event.target.value))}\r\n                        placeholder=\"Please enter a dimension\"\r\n                        className=\"characters__input\"\r\n                        maxLength=\"30\"\r\n                    />\r\n                </label>\r\n\r\n                <label className=\"characters__label\">\r\n                    <div className=\"characters__text\">\r\n                        Search by type:\r\n                    </div>\r\n\r\n                    <input\r\n                        type=\"text\"\r\n                        onBlur={(event) => (onHandleBlur('type', event.target.value))}\r\n                        placeholder=\"Please enter a type\"\r\n                        className=\"characters__input\"\r\n                        maxLength=\"30\"\r\n                    />\r\n                </label>\r\n\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={() => onHandleSubmite()}\r\n                    className=\"characters__button\"\r\n                >\r\n                    Search\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default LocationsSearchBar;","import React, {useEffect} from 'react';\r\nimport {getLocations} from '../../actions/GetLocations';\r\nimport {getNextLocationsPage} from '../../actions/GetNextLocationsPage';\r\nimport {getLocationsBySearchParams} from '../../actions/GetLocationsBySearchParams';\r\nimport {connect} from 'react-redux';\r\nimport LocationCard from './components/locationCard/LocationCard';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport LocationsSearchBar from './components/locatiosSearchBar/LocationsSearchBar';\r\nimport './Locations.scss';\r\n\r\nconst Locations = ({\r\n                       getLocations,\r\n                       getNextLocationsPage,\r\n                       getLocationsBySearchParams,\r\n                       loading,\r\n                       loaded,\r\n                       info,\r\n                       searched,\r\n                       locationsList,\r\n                       error\r\n                   }) => {\r\n\r\n    useEffect(() => {\r\n        if (!loaded || !searched) {\r\n            getLocations();\r\n        }\r\n    }, []);\r\n\r\n    const handleNextUpdate = () => {\r\n        getNextLocationsPage(info.next);\r\n    };\r\n\r\n    if (!locationsList) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"locations\">\r\n            <LocationsSearchBar getLocationsBySearchParams={getLocationsBySearchParams}/>\r\n\r\n            <ul className=\"locations__list\">\r\n                <InfiniteScroll\r\n                    dataLength={locationsList.length}\r\n                    next={handleNextUpdate}\r\n                    hasMore={!!info.next}\r\n                    className=\"locations__scroll\"\r\n                >\r\n                    {locationsList.map(location => (\r\n                        <li key={location.id} className=\"locations__item\">\r\n                            <LocationCard location={location}/>\r\n                        </li>\r\n                    ))}\r\n                </InfiniteScroll>\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.locations.loading,\r\n        loaded: state.locations.loaded,\r\n        info: state.locations.info,\r\n        earched: state.locations.serched,\r\n        locationsList: state.locations.locationsList,\r\n        error: state.locations.error\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getLocations: () => {\r\n            dispatch(getLocations());\r\n        },\r\n        getNextLocationsPage: (link) => {\r\n            dispatch(getNextLocationsPage(link));\r\n        },\r\n        getLocationsBySearchParams: (params) => {\r\n            dispatch(getLocationsBySearchParams(params));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Locations);\r\n","export const START_LOAD_EPISODES = \"START_LOAD_EPISODES\";\r\nexport const LOADED_EPISODES = \"LOADED_EPISODES\";\r\nexport const ERROR_EPISODES = \"ERROR_EPISODES\";\r\n\r\nexport const START_LOAD_EPISODES_NEXT_PAGE = \"START_LOAD_EPISODES_NEXT_PAGE\";\r\nexport const LOADED_EPISODES_NEXT_PAGE = \"LOADED_EPISODES_NEXT_PAGE\";\r\nexport const ERROR_EPISODES_NEXT_PAGE = \"ERROR_EPISODES_NEXT_PAGE\";\r\n\r\nexport const START_LOAD_EPISODES_BY_SEARCH_PARAMS = \"START_LOAD_EPISODES_BY_SEARCH_PARAMS\";\r\nexport const LOADED_EPISODES_BY_SEARCH_PARAMS = \"LOADED_EPISODES_BY_SEARCH_PARAMS\";\r\nexport const ERROR_EPISODES_BY_SEARCH_PARAMS = \"ERROR_EPISODES_BY_SEARCH_PARAMS\";\r\n","import { START_LOAD_EPISODES, LOADED_EPISODES, ERROR_EPISODES} from './actions-types/episodesListActions';\r\n\r\nexport const getEpisodes = () => {\r\n    return dispatch => {\r\n        dispatch(getStartedLoadData());\r\n\r\n        fetch(`https://rickandmortyapi.com/api/episode`)\r\n            .then( response => {\r\n                if(response.ok) {\r\n                    return response.json();\r\n                }\r\n                throw new Error('error');\r\n            })\r\n            .then(res => {\r\n                dispatch(getLoadedDataSuccess(res));\r\n            })\r\n            .catch(err => {\r\n                dispatch(getDataFailure(err.message));\r\n            })\r\n    };\r\n};\r\n\r\nconst getStartedLoadData = () => ({\r\n    type: START_LOAD_EPISODES\r\n});\r\n\r\nconst getLoadedDataSuccess = (data) => ({\r\n    type: LOADED_EPISODES,\r\n    payload: {\r\n        ...data\r\n    }\r\n});\r\n\r\nconst getDataFailure = (error) => ({\r\n    type: ERROR_EPISODES,\r\n    payload: {\r\n        error\r\n    }\r\n});","import { START_LOAD_EPISODES_NEXT_PAGE, LOADED_EPISODES_NEXT_PAGE, ERROR_EPISODES_NEXT_PAGE } from './actions-types/episodesListActions';\r\n\r\nexport const getNextEpisodesPage = (link) => {\r\n    return dispatch => {\r\n        dispatch(getStartedLoadData());\r\n\r\n        fetch(link)\r\n            .then( response => {\r\n                if(response.ok) {\r\n                    return response.json();\r\n                }\r\n                throw new Error('error');\r\n            })\r\n            .then(res => {\r\n                dispatch(getLoadedDataSuccess(res));\r\n            })\r\n            .catch(err => {\r\n                dispatch(getDataFailure(err.message));\r\n            })\r\n    };\r\n};\r\n\r\nconst getStartedLoadData = () => ({\r\n    type: START_LOAD_EPISODES_NEXT_PAGE\r\n});\r\n\r\nconst getLoadedDataSuccess = (data) => ({\r\n    type: LOADED_EPISODES_NEXT_PAGE,\r\n    payload: {\r\n        ...data\r\n    }\r\n});\r\n\r\nconst getDataFailure = (error) => ({\r\n    type: ERROR_EPISODES_NEXT_PAGE,\r\n    payload: {\r\n        error\r\n    }\r\n});","import {\r\n    START_LOAD_EPISODES_BY_SEARCH_PARAMS,\r\n    LOADED_EPISODES_BY_SEARCH_PARAMS,\r\n    ERROR_EPISODES_BY_SEARCH_PARAMS\r\n} from './actions-types/episodesListActions';\r\n\r\nexport const getEpisodesBySearchParams = (params) => {\r\n    return dispatch => {\r\n        dispatch(getStartedLoadData());\r\n\r\n        fetch(`https://rickandmortyapi.com/api/episode/?${params}`)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                }\r\n                throw new Error('error');\r\n            })\r\n            .then(res => {\r\n                dispatch(getLoadedDataSuccess(res));\r\n            })\r\n            .catch(err => {\r\n                dispatch(getDataFailure(err.message));\r\n            })\r\n    };\r\n};\r\n\r\nconst getStartedLoadData = () => ({\r\n    type: START_LOAD_EPISODES_BY_SEARCH_PARAMS\r\n});\r\n\r\nconst getLoadedDataSuccess = (data) => ({\r\n    type: LOADED_EPISODES_BY_SEARCH_PARAMS,\r\n    payload: {\r\n        ...data\r\n    }\r\n});\r\n\r\nconst getDataFailure = (error) => ({\r\n    type: ERROR_EPISODES_BY_SEARCH_PARAMS,\r\n    payload: {\r\n        error\r\n    }\r\n});","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './EpisodeCard.scss';\r\n\r\nconst EpisodeCard = ({ep}) => {\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={ep.image} className=\"card__img\" alt=\"photo\"/>\r\n\r\n            <div className=\"card__wrapper\">\r\n                <div className=\"card__item\">\r\n                    Name: &nbsp; {ep.name}\r\n                </div>\r\n\r\n                Episode: &nbsp;\r\n                <Link to={`/episode/${ep.id}`} className=\"card__link\">\r\n                    {ep.episode}\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default EpisodeCard;","import React, {useState} from 'react';\r\n\r\nconst EpisodesSearchBar = ({getEpisodesBySearchParams}) => {\r\n    const [formData, setFormData] = useState({});\r\n\r\n    const onHandleBlur = (key, value) => {\r\n        if (!!value) {\r\n            setFormData({...formData, [key]: value});\r\n        }\r\n    };\r\n\r\n    const onHandleSubmite = () => {\r\n        let searchParams = \"\";\r\n\r\n        for (let el in formData) {\r\n            searchParams = searchParams + el + '=' + formData[el] + '&';\r\n        }\r\n\r\n        searchParams = searchParams.slice(0, -1);\r\n\r\n        getEpisodesBySearchParams(searchParams);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"characters__form\">\r\n                <label className=\"characters__label\">\r\n                    <div className=\"characters__text\">\r\n                        Search by name:\r\n                    </div>\r\n\r\n                    <input\r\n                        type=\"text\"\r\n                        onBlur={(event) => (onHandleBlur('name', event.target.value))}\r\n                        placeholder=\"Please enter a name\"\r\n                        className=\"characters__input\"\r\n                        maxLength=\"30\"\r\n                    />\r\n                </label>\r\n\r\n                <label className=\"characters__label\">\r\n                    <div className=\"characters__text\">\r\n                        Search by species:\r\n                    </div>\r\n\r\n                    <input\r\n                        type=\"text\"\r\n                        onBlur={(event) => (onHandleBlur('episode', event.target.value))}\r\n                        placeholder=\"Please enter a episode code\"\r\n                        className=\"characters__input\"\r\n                        maxLength=\"30\"\r\n                    />\r\n                </label>\r\n\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={() => onHandleSubmite()}\r\n                    className=\"characters__button\"\r\n                >\r\n                    Search\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default EpisodesSearchBar;","import React, {useEffect} from 'react';\r\nimport {getEpisodes} from '../../actions/GetEpisodes';\r\nimport {getNextEpisodesPage} from '../../actions/GetNextEpisodesPage';\r\nimport {getEpisodesBySearchParams} from '../../actions/GetEpisodesBySearchParams';\r\nimport {connect} from 'react-redux';\r\nimport EpisodeCard from './components/episodeCard/EpisodeCard';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport EpisodesSearchBar from './components/episodesSearchBar/EpisodesSearchBar';\r\nimport './Episodes.scss';\r\n\r\nconst Locations = ({\r\n                       getEpisodes,\r\n                       getNextEpisodesPage,\r\n                       getEpisodesBySearchParams,\r\n                       loading,\r\n                       loaded,\r\n                       info,\r\n                       searched,\r\n                       episodesList,\r\n                       error\r\n                   }) => {\r\n\r\n    useEffect(() => {\r\n        if (!loaded || !searched) {\r\n            getEpisodes();\r\n        }\r\n    }, []);\r\n\r\n    const handleNextUpdate = () => {\r\n        getNextEpisodesPage(info.next);\r\n    };\r\n\r\n    if (!episodesList) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"episodes\">\r\n            <EpisodesSearchBar getEpisodesBySearchParams={getEpisodesBySearchParams}/>\r\n\r\n            <ul className=\"episodes__list\">\r\n                <InfiniteScroll\r\n                    dataLength={episodesList.length}\r\n                    next={handleNextUpdate}\r\n                    hasMore={!!info.next}\r\n                    className=\"episodes__scroll\"\r\n                >\r\n                    {episodesList.map(ep => (\r\n                        <li key={ep.id} className=\"episodes__item\">\r\n                            <EpisodeCard ep={ep}/>\r\n                        </li>\r\n                    ))}\r\n                </InfiniteScroll>\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.episodes.loading,\r\n        loaded: state.episodes.loaded,\r\n        info: state.episodes.info,\r\n        searched: state.episodes.serched,\r\n        episodesList: state.episodes.episodesList,\r\n        error: state.episodes.error\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getEpisodes: () => {\r\n            dispatch(getEpisodes());\r\n        },\r\n        getNextEpisodesPage: (link) => {\r\n            dispatch(getNextEpisodesPage(link));\r\n        },\r\n        getEpisodesBySearchParams: (params) => {\r\n            dispatch(getEpisodesBySearchParams(params));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Locations);\r\n","export const START_LOAD_CHARACTER = \"START_LOAD_CHARACTER\";\r\nexport const LOADED_CHARACTER = \"LOADED_CHARACTER\";\r\nexport const ERROR_CHARACTER = \"ERROR_CHARACTER\";","import { START_LOAD_CHARACTER, LOADED_CHARACTER, ERROR_CHARACTER } from './actions-types/characterActions';\r\n\r\nexport const getCharacter = (id) => {\r\n    return dispatch => {\r\n        dispatch(getStartedLoadData());\r\n\r\n        fetch(`https://rickandmortyapi.com/api/character/${id}`)\r\n            .then( response => {\r\n                if(response.ok) {\r\n                    return response.json();\r\n                }\r\n                throw new Error('error');\r\n            })\r\n            .then(res => {\r\n                dispatch(getLoadedDataSuccess(res));\r\n            })\r\n            .catch(err => {\r\n                dispatch(getDataFailure(err.message));\r\n            })\r\n    };\r\n};\r\n\r\nconst getStartedLoadData = () => ({\r\n    type: START_LOAD_CHARACTER\r\n});\r\n\r\nconst getLoadedDataSuccess = (data) => ({\r\n    type: LOADED_CHARACTER,\r\n    payload: {\r\n        ...data\r\n    }\r\n});\r\n\r\nconst getDataFailure = (error) => ({\r\n    type: ERROR_CHARACTER,\r\n    payload: {\r\n        error\r\n    }\r\n});","import React, {useEffect} from 'react';\r\nimport {getCharacter} from '../../actions/GetCharacter';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport './CharacterPage.scss';\r\n\r\nconst CharacterPage = ({match, getCharacter, loading, characterParams, error}) => {\r\n\r\n    useEffect(() => {\r\n        if (!loading) {\r\n            getCharacter(match.params.characterId);\r\n        }\r\n    }, []);\r\n\r\n    if (loading || !characterParams) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"character\">\r\n            <div className=\"character__wrapper\">\r\n                <img src={characterParams.image} className=\"character__img\" alt=\"photo\"/>\r\n\r\n                <div className=\"character__params\">\r\n                    <div className=\"character__params--text\">\r\n                        Name: &nbsp; {characterParams.name}\r\n                    </div>\r\n\r\n                    <div className=\"character__params--text\">\r\n                        Gender: &nbsp; {characterParams.gender}\r\n                    </div>\r\n\r\n                    <div className=\"character__params--text\">\r\n                        Species: &nbsp; {characterParams.species}\r\n                    </div>\r\n\r\n                    <div className=\"character__params--text\">\r\n                        Status: &nbsp; {characterParams.status}\r\n                    </div>\r\n\r\n                    <div className=\"character__params--text\">\r\n                        Type: &nbsp; {characterParams.type}\r\n                    </div>\r\n\r\n                    <div className=\"character__params--text\">\r\n                        Origin: &nbsp;\r\n                        <Link\r\n                            to={`/location/${characterParams.origin.url.split('/').reverse()[0]}`}\r\n                            className=\"character__link\"\r\n                        >\r\n                            {characterParams.origin.name}\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className=\"character__episode\">\r\n                        <div>\r\n                            Episodes:\r\n                        </div>\r\n\r\n                        <ul className=\"character__episode--list\">\r\n                            &nbsp;\r\n                            {characterParams\r\n                            && characterParams.episode\r\n                            && characterParams.episode.map((ep, index) => (\r\n                                <li key={index} className=\"character__episode--item\">\r\n                                    <Link\r\n                                        to={`/episode/${ep.split('/').reverse()[0]}`}\r\n                                        className=\"character__link\"\r\n                                    >\r\n                                        {ep.split('/').reverse()[0]}\r\n                                    </Link>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div className=\"character__location\">\r\n                        Location: &nbsp;\r\n                        <Link\r\n                            to={`/location/${characterParams.location.url.split('/').reverse()[0]}`}\r\n                            className=\"character__link\"\r\n                        >\r\n                            {characterParams.location.url.split('/').reverse()[0]}\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.character.loading,\r\n        characterParams: state.character.characterParams,\r\n        error: state.character.error\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getCharacter: (id) => {\r\n            dispatch(getCharacter(id));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CharacterPage);","export const START_LOAD_LOCATION = \"START_LOAD_LOCATION\";\r\nexport const LOADED_LOCATION = \"LOADED_LOCATION\";\r\nexport const ERROR_LOCATION = \"ERROR_LOCATION\";\r\n","import { START_LOAD_LOCATION, LOADED_LOCATION, ERROR_LOCATION } from './actions-types/locationActions';\r\n\r\nexport const getLocation = (id) => {\r\n    return dispatch => {\r\n        dispatch(getStartedLoadData());\r\n\r\n        fetch(`https://rickandmortyapi.com/api/location/${id}`)\r\n            .then( response => {\r\n                if(response.ok) {\r\n                    return response.json();\r\n                }\r\n                throw new Error('error');\r\n            })\r\n            .then(res => {\r\n                dispatch(getLoadedDataSuccess(res));\r\n            })\r\n            .catch(err => {\r\n                dispatch(getDataFailure(err.message));\r\n            })\r\n    };\r\n};\r\n\r\nconst getStartedLoadData = () => ({\r\n    type: START_LOAD_LOCATION\r\n});\r\n\r\nconst getLoadedDataSuccess = (data) => ({\r\n    type: LOADED_LOCATION,\r\n    payload: {\r\n        ...data\r\n    }\r\n});\r\n\r\nconst getDataFailure = (error) => ({\r\n    type: ERROR_LOCATION,\r\n    payload: {\r\n        error\r\n    }\r\n});","import React, {useEffect} from 'react';\r\nimport {getLocation} from '../../actions/GetLocation';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport './LocationPage.scss';\r\n\r\nconst LocationPage = ({match, getLocation, loading, locationParams, error}) => {\r\n\r\n    useEffect(() => {\r\n        if (!loading) {\r\n            getLocation(match.params.locationId);\r\n        }\r\n    }, []);\r\n\r\n    if (loading || !locationParams) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"location\">\r\n            <div className=\"location__wrapper\">\r\n                <img src={locationParams.image} className=\"location__img\" alt=\"photo\"/>\r\n\r\n                <div className=\"location__params\">\r\n                    <div className=\"location__params--text\">\r\n                        Name: &nbsp; {locationParams.name}\r\n                    </div>\r\n\r\n                    <div className=\"location__params--text\">\r\n                        Type: &nbsp; {locationParams.type}\r\n                    </div>\r\n\r\n                    <div className=\"location__params--text\">\r\n                        Dimension: &nbsp; {locationParams.dimension}\r\n                    </div>\r\n\r\n                    <div className=\"location__characters\">\r\n                        <div>\r\n                            Residents:\r\n                        </div>\r\n\r\n                        <ul className=\"location__characters--list\">\r\n                            &nbsp;\r\n                            {locationParams\r\n                            && locationParams.residents\r\n                            && locationParams.residents.map((unit, index) => (\r\n                                <li key={index} className=\"location__characters--item\">\r\n                                    <Link\r\n                                        to={`/character/${unit.split('/').reverse()[0]}`}\r\n                                        className=\"location__link\"\r\n                                    >\r\n                                        {unit.split('/').reverse()[0]}\r\n                                    </Link>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.location.loading,\r\n        locationParams: state.location.locationParams,\r\n        error: state.location.error\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getLocation: (id) => {\r\n            dispatch(getLocation(id));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(LocationPage);","export const START_LOAD_EPISODE = \"START_LOAD_EPISODE\";\r\nexport const LOADED_EPISODE = \"LOADED_EPISODE\";\r\nexport const ERROR_EPISODE = \"ERROR_EPISODE\";","import { START_LOAD_EPISODE, LOADED_EPISODE, ERROR_EPISODE } from './actions-types/episodeActions';\r\n\r\nexport const getEpisode = (id) => {\r\n    return dispatch => {\r\n        dispatch(getStartedLoadData());\r\n\r\n        fetch(`https://rickandmortyapi.com/api/episode/${id}`)\r\n            .then( response => {\r\n                if(response.ok) {\r\n                    return response.json();\r\n                }\r\n                throw new Error('error');\r\n            })\r\n            .then(res => {\r\n                dispatch(getLoadedDataSuccess(res));\r\n            })\r\n            .catch(err => {\r\n                dispatch(getDataFailure(err.message));\r\n            })\r\n    };\r\n};\r\n\r\nconst getStartedLoadData = () => ({\r\n    type: START_LOAD_EPISODE\r\n});\r\n\r\nconst getLoadedDataSuccess = (data) => ({\r\n    type: LOADED_EPISODE,\r\n    payload: {\r\n        ...data\r\n    }\r\n});\r\n\r\nconst getDataFailure = (error) => ({\r\n    type: ERROR_EPISODE,\r\n    payload: {\r\n        error\r\n    }\r\n});","import React, {useEffect} from 'react';\r\nimport {getEpisode} from '../../actions/GetEpisode';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport './EpisodePage.scss';\r\n\r\nconst EpisodePage = ({match, getEpisode, loading, episodeParams, error}) => {\r\n\r\n    useEffect(() => {\r\n        if (!loading) {\r\n            getEpisode(match.params.episodeId);\r\n        }\r\n    }, []);\r\n\r\n    if (loading || !episodeParams) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"episode\">\r\n            <div className=\"episode__wrapper\">\r\n                <img src={episodeParams.image} className=\"episode__img\" alt=\"photo\"/>\r\n\r\n                <div className=\"episode__params\">\r\n                    <div className=\"episode__params--text\">\r\n                        Name: &nbsp; {episodeParams.name}\r\n                    </div>\r\n\r\n                    <div className=\"episode__params--text\">\r\n                        Episode: &nbsp; {episodeParams.episode}\r\n                    </div>\r\n\r\n                    <div className=\"episode__characters\">\r\n                        <div>\r\n                            Characters:\r\n                        </div>\r\n\r\n                        <ul className=\"episode__characters--list\">\r\n                            &nbsp;\r\n                            {episodeParams\r\n                            && episodeParams.characters\r\n                            && episodeParams.characters.map((unit, index) => (\r\n                                <li key={index} className=\"episode__characters--item\">\r\n                                    <Link\r\n                                        to={`/character/${unit.split('/').reverse()[0]}`}\r\n                                        className=\"episode__link\"\r\n                                    >\r\n                                        {unit.split('/').reverse()[0]}\r\n                                    </Link>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.episode.loading,\r\n        episodeParams: state.episode.episodeParams,\r\n        error: state.episode.error\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getEpisode: (id) => {\r\n            dispatch(getEpisode(id));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(EpisodePage);","import React from 'react';\nimport {Switch, Route, Redirect} from 'react-router-dom';\nimport Header from './components/common/header/Header';\nimport Footer from \"./components/common/footer/Footer\";\nimport Characters from './components/charactersList/Characters';\nimport Locations from \"./components/locationsList/Locations\";\nimport Episodes from \"./components/episodesList/Episodes\";\nimport CharacterPage from \"./components/characterPage/CharacterPage\";\nimport LocationPage from \"./components/locationPage/LocationPage\";\nimport EpisodePage from \"./components/episodePage/EpisodePage\";\nimport './App.scss';\n\nfunction App() {\n    return (\n        <div className=\"app\">\n            <div className=\"app__header\">\n                <Header/>\n            </div>\n\n            <main className=\"app__main\">\n                <Switch>\n                    <Route\n                        path=\"/\"\n                        exact\n                    >\n                        <Redirect to=\"/character\" />\n                    </Route>\n\n                    <Route\n                        path=\"/character\"\n                        exact\n                        component={Characters}\n                    />\n\n                    <Route\n                        path=\"/location\"\n                        exact\n                        component={Locations}\n                    />\n\n                    <Route\n                        path=\"/episode\"\n                        exact\n                        component={Episodes}\n                    />\n\n                    <Route\n                    path=\"/character/:characterId\"\n                    exact\n                    component={CharacterPage}\n                    />\n\n                    <Route\n                        path=\"/location/:locationId\"\n                        exact\n                        component={LocationPage}\n                    />\n\n                    <Route\n                        path=\"/episode/:episodeId\"\n                        exact\n                        component={EpisodePage}\n                    />\n                </Switch>\n            </main>\n\n            <div className=\"app__footer\">\n                <Footer/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import {\r\n    START_LOAD_CHARACTERS,\r\n    LOADED_CHARACTERS,\r\n    ERROR_CHARACTERS,\r\n    START_LOAD_CHARACTERS_NEXT_PAGE,\r\n    LOADED_CHARACTERS_NEXT_PAGE,\r\n    ERROR_CHARACTERS_NEXT_PAGE,\r\n    START_LOAD_CHARACTERS_BY_SEARCH_PARAMS,\r\n    LOADED_CHARACTERS_BY_SEARCH_PARAMS,\r\n    ERROR_CHARACTERS_BY_SEARCH_PARAMS\r\n} from '../actions/actions-types/charactersListActions';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    loaded: false,\r\n    searched: false,\r\n    info: {},\r\n    charactersList: [],\r\n    error: null,\r\n}\r\n\r\nexport default function charactersReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case START_LOAD_CHARACTERS:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                loaded: false\r\n            };\r\n        case START_LOAD_CHARACTERS_NEXT_PAGE:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                loaded: false\r\n            };\r\n            case START_LOAD_CHARACTERS_BY_SEARCH_PARAMS:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                loaded: false\r\n            };\r\n        case LOADED_CHARACTERS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                loaded: true,\r\n                searched: false,\r\n                info: {...action.payload.info},\r\n                charactersList: [...action.payload.results]\r\n            };\r\n        case LOADED_CHARACTERS_NEXT_PAGE:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                loaded: true,\r\n                info: {...action.payload.info},\r\n                charactersList: [...state.charactersList, ...action.payload.results]\r\n            };\r\n            case LOADED_CHARACTERS_BY_SEARCH_PARAMS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                loaded: true,\r\n                searched: true,\r\n                info: {...action.payload.info},\r\n                charactersList: [...action.payload.results]\r\n            };\r\n        case ERROR_CHARACTERS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            };\r\n        case ERROR_CHARACTERS_NEXT_PAGE:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            };\r\n            case ERROR_CHARACTERS_BY_SEARCH_PARAMS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { START_LOAD_CHARACTER, LOADED_CHARACTER, ERROR_CHARACTER } from '../actions/actions-types/characterActions';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    characterParams: null,\r\n    error: null,\r\n}\r\n\r\nexport default function characterReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case START_LOAD_CHARACTER:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        case LOADED_CHARACTER:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                characterParams: {...action.payload}\r\n            };\r\n        case ERROR_CHARACTER:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    START_LOAD_LOCATIONS,\r\n    LOADED_LOCATIONS,\r\n    ERROR_LOCATIONS,\r\n    START_LOAD_LOCATIONS_NEXT_PAGE,\r\n    LOADED_LOCATIONS_NEXT_PAGE,\r\n    ERROR_LOCATIONS_NEXT_PAGE,\r\n    START_LOAD_LOCATIONS_BY_SEARCH_PARAMS,\r\n    LOADED_LOCATIONS_BY_SEARCH_PARAMS,\r\n    ERROR_LOCATIONS_BY_SEARCH_PARAMS\r\n} from '../actions/actions-types/locationsListActions';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    loaded: false,\r\n    searched: false,\r\n    info: {},\r\n    locationsList: [],\r\n    error: null,\r\n}\r\n\r\nexport default function locationsReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case START_LOAD_LOCATIONS:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                loaded: false\r\n            };\r\n        case START_LOAD_LOCATIONS_NEXT_PAGE:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                loaded: false\r\n            };\r\n            case START_LOAD_LOCATIONS_BY_SEARCH_PARAMS:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                loaded: false\r\n            };\r\n        case LOADED_LOCATIONS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                loaded: true,\r\n                searched: false,\r\n                info: {...action.payload.info},\r\n                locationsList: [...action.payload.results]\r\n            };\r\n        case LOADED_LOCATIONS_NEXT_PAGE:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                loaded: true,\r\n                info: {...action.payload.info},\r\n                locationsList: [...state.locationsList, ...action.payload.results]\r\n            };\r\n            case LOADED_LOCATIONS_BY_SEARCH_PARAMS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                loaded: true,\r\n                searched: true,\r\n                info: {...action.payload.info},\r\n                locationsList: [...action.payload.results]\r\n            };\r\n        case ERROR_LOCATIONS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            };\r\n        case ERROR_LOCATIONS_NEXT_PAGE:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            };\r\n            case ERROR_LOCATIONS_BY_SEARCH_PARAMS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { START_LOAD_LOCATION, LOADED_LOCATION, ERROR_LOCATION } from '../actions/actions-types/locationActions';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    locationParams: null,\r\n    error: null,\r\n}\r\n\r\nexport default function locationReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case START_LOAD_LOCATION:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        case LOADED_LOCATION:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                locationParams: {...action.payload}\r\n            };\r\n        case ERROR_LOCATION:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    START_LOAD_EPISODES,\r\n    LOADED_EPISODES,\r\n    ERROR_EPISODES,\r\n    START_LOAD_EPISODES_NEXT_PAGE,\r\n    LOADED_EPISODES_NEXT_PAGE,\r\n    ERROR_EPISODES_NEXT_PAGE,\r\n    START_LOAD_EPISODES_BY_SEARCH_PARAMS,\r\n    LOADED_EPISODES_BY_SEARCH_PARAMS,\r\n    ERROR_EPISODES_BY_SEARCH_PARAMS\r\n} from '../actions/actions-types/episodesListActions';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    loaded: false,\r\n    searched: false,\r\n    info: {},\r\n    episodesList: [],\r\n    error: null,\r\n}\r\n\r\nexport default function episodesReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case START_LOAD_EPISODES:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                loaded: false\r\n            };\r\n        case START_LOAD_EPISODES_NEXT_PAGE:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                loaded: false\r\n            };\r\n            case START_LOAD_EPISODES_BY_SEARCH_PARAMS:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                loaded: false\r\n            };\r\n        case LOADED_EPISODES:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                loaded: true,\r\n                searched: false,\r\n                info: {...action.payload.info},\r\n                episodesList: [...action.payload.results]\r\n            };\r\n        case LOADED_EPISODES_NEXT_PAGE:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                loaded: true,\r\n                info: {...action.payload.info},\r\n                episodesList: [...state.episodesList, ...action.payload.results]\r\n            };\r\n            case LOADED_EPISODES_BY_SEARCH_PARAMS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                loaded: true,\r\n                searched: true,\r\n                info: {...action.payload.info},\r\n                episodesList: [...action.payload.results]\r\n            };\r\n        case ERROR_EPISODES:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            };\r\n        case ERROR_EPISODES_NEXT_PAGE:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            };\r\n            case ERROR_EPISODES_BY_SEARCH_PARAMS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { START_LOAD_EPISODE, LOADED_EPISODE, ERROR_EPISODE } from '../actions/actions-types/episodeActions';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    episodeParams: null,\r\n    error: null,\r\n}\r\n\r\nexport default function episodeReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case START_LOAD_EPISODE:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        case LOADED_EPISODE:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                episodeParams: {...action.payload}\r\n            };\r\n        case ERROR_EPISODE:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport charactersReducer from './charactersReducer';\r\nimport characterReducer from './characterReducer';\r\nimport locationsReducer from './locationsReducer';\r\nimport locationReducer from './locationReducer';\r\nimport episodesReducer from './episodesReducer';\r\nimport episodeReducer from './episodeReducer';\r\n\r\nexport default combineReducers({\r\n   characters: charactersReducer,\r\n   character: characterReducer,\r\n   locations: locationsReducer,\r\n   location: locationReducer,\r\n   episodes: episodesReducer,\r\n   episode: episodeReducer\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport './index.scss';\nimport App from './App';\nimport combineReducer from './reducers/allReducer';\n\nconst store = createStore(combineReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}